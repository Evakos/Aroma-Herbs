{"version":3,"sources":["webpack:///./resources/scripts/product-archive.js","webpack:///external \"jQuery\""],"names":["preLoadIamges","imagesLoaded","totalImages","$","createRows","i","createRow","document","idx","img","AOS","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","offset","delay","duration","easing","once","mirror","anchorPlacement","term_id","jQuery","type","url","data","action","categoryfilter","success","e","module","exports","window"],"mappings":"8HAkDA,SAASA,IAEJ,IAAIC,EAFgB,EAIhBC,EAAcC,mBAJE,OAiBpB,eACEF,GACA,IASAE,2BAJyB,UA1ChC,WAGE,IAFA,IAAMC,EAAaD,EAAnB,wBAESE,EAAT,EAAgBA,EAAID,EAApB,OAAuCC,GAAvC,EACED,UACYC,EADZD,qFAQFD,wBAAuB,SAAUE,GAC/BF,iBAAiB,QAAUE,EAA3BF,OAmCGG,GAEAC,gEArBFJ,yBAAwB,SAAUK,EAAKC,GACrCN,mCAA+CA,UAA/CA,WArDPO,SAAS,CAEPC,QAFO,SAGPC,WAHO,mBAIPC,cAJO,WAKPC,kBALO,cAMPC,eANO,EAOPC,yBAPO,EAQPC,cARO,GASPC,cATO,GAYPC,OAZO,EAaPC,MAbO,EAcPC,SAdO,IAePC,OAfO,OAgBPC,MAhBO,EAiBPC,QAjBO,EAkBPC,gBAlBO,eAkFTtB,GAAE,WACA,IAAIuB,EAAUC,O,WAAAA,KAAd,cAEAxB,OAAO,CACLyB,KADK,OAELC,IAFK,2BAGLC,KAAM,CAAEC,OAAF,iBAA4BC,eAAgBN,GAClDO,QAAS,YACP9B,uBAGAH,OAOJG,yBAAwB,SAAU+B,GAChC,IAAIR,EAAUC,kBAAd,cAEAxB,OAAO,CACLyB,KADK,OAGLC,IAHK,2BAILC,KAAM,CAAEC,OAAF,iBAA4BC,eAAgBN,GAClDO,QAAS,YACP9B,uBAEAH,OAGJkC,0B,6BC3HJC,EAAOC,QAAUC,OAAe,S","file":"/scripts/product-archive.js","sourcesContent":["/**\n * External Dependencies\n */\nimport \"jquery\";\n\nimport AOS from \"aos\";\n\n// You can also pass an optional settings object\n// below listed default settings\nAOS.init({\n  // Global settings:\n  disable: \"mobile\", // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\n  startEvent: \"DOMContentLoaded\", // name of the event dispatched on the document, that AOS should initialize on\n  initClassName: \"aos-init\", // class applied after initialization\n  animatedClassName: \"aos-animate\", // class applied on animation\n  useClassNames: false, // if true, will add content of `data-aos` as classes on scroll\n  disableMutationObserver: false, // disables automatic mutations' detections (advanced)\n  debounceDelay: 50, // the delay on debounce used while resizing window (advanced)\n  throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\n\n  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n  offset: 0, // offset (in px) from the original trigger point\n  delay: 0, // values from 0 to 3000, with step 50ms\n  duration: 1000, // values from 0 to 3000, with step 50ms\n  easing: \"ease\", // default easing for AOS animations\n  once: false, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n  anchorPlacement: \"top-center\", // defines which position of the element regarding to window should trigger the animation\n});\n\n//Creating Rows dynamically to animate separately.\n\nfunction createRow() {\n  const createRows = $(\".single-product-grid\");\n\n  for (var i = 0; i < createRows.length; i += 4) {\n    createRows\n      .slice(i, i + 4)\n      .wrapAll(\n        \"<div class='product-row grid md:grid-cols-4' data-aos='fade-up'></div>\"\n      );\n  }\n\n  // Don't need this now?\n  $(\".product-row\").each(function (i) {\n    $(this).addClass(\"row-\" + (i + 1));\n  });\n}\n\n\nfunction preLoadIamges() {\n     // Images loaded is zero because we're going to process a new set of images.\n     var imagesLoaded = 0;\n     // Total images is still the total number of <img> elements on the page.\n     var totalImages = $(\"#products img\").length;\n\n     //console.log(totalImages);\n\n     // Step through each image in the DOM, clone it, attach an onload event\n     // listener, then set its source to the source of the original image. When\n     // that new image has loaded, fire the imageLoaded() callback.\n     $(\"#products img\").each(function (idx, img) {\n       $(\"<img>\").on(\"load\", imageLoaded).attr(\"src\", $(img).attr(\"src\"));\n     });\n\n     // Do exactly as we had before -- increment the loaded count and if all are\n     // loaded, call the allImagesLoaded() function.\n     function imageLoaded() {\n       imagesLoaded++;\n       if (imagesLoaded == totalImages) {\n         allImagesLoaded();\n       }\n     }\n\n     function allImagesLoaded() {\n       \n       //console.log(\"Images Loaded\");\n\n       $(\"#products\").removeClass(\"hidden\"); // Hide loader.\n\n       createRow();\n\n       document.getElementById(\"loader-product\").style.display = \"none\";\n\n       \n     }\n\n    }\n\n\n\n$(() => {\n  var term_id = jQuery(this).attr(\"product-id\");\n\n  $.ajax({\n    type: \"post\",\n    url: \"/wp-admin/admin-ajax.php\",\n    data: { action: \"filterproducts\", categoryfilter: term_id },\n    success: function (data) {\n      $(\"#products\").html(data);\n\n \n      preLoadIamges();\n\n\n\n    },\n  });\n\n  $(\".prod-filter\").click(function (e) {\n    var term_id = jQuery(this).attr(\"product-id\");\n\n    $.ajax({\n      type: \"post\",\n\n      url: \"/wp-admin/admin-ajax.php\",\n      data: { action: \"filterproducts\", categoryfilter: term_id },\n      success: function (data) {\n        $(\"#products\").html(data);\n\n        preLoadIamges();\n      },\n    });\n    e.preventDefault();\n  });\n});\n","module.exports = window[\"jQuery\"];"],"sourceRoot":""}